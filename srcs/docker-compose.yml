services:
  nginx:
    image: inception:nginx
    container_name: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    volumes:
      - $HOME/data/wordpress:/var/www/wordpress:rw
      - $HOME/data/portfolio:/var/www/portfolio:rw
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    ports:
      - '443:443'
    networks:
      - default
    depends_on:
      wordpress:
        condition: service_healthy
      adminer:
        condition: service_started
      info:
        condition: service_started
      portfolio:
        condition: service_started
    restart: always

  mariadb:
    image: inception:mariadb
    container_name: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    volumes:
      - $HOME/data/mariadb:/var/lib/mysql:rw
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_USER_PASSWORD=${MYSQL_USER_PASSWORD}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
    expose:
      - 3306
    networks:
      - default
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "--host=localhost"]
      start_period: 1m
      interval: 5s
      timeout: 2s
      retries: 21
    restart: always

  wordpress:
    image: inception:wordpress
    container_name: wordpress
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    volumes:
      - $HOME/data/wordpress:/var/www/wordpress:rw
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_USER_PASSWORD=${MYSQL_USER_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
      - WORDPRESS_ADMIN_USER=${WORDPRESS_ADMIN_USER}
      - WORDPRESS_ADMIN_PASSWORD=${WORDPRESS_ADMIN_PASSWORD}
      - WORDPRESS_ADMIN_EMAIL=${WORDPRESS_ADMIN_EMAIL}
      - WORDPRESS_USER=${WORDPRESS_USER}
      - WORDPRESS_USER_PASSWORD=${WORDPRESS_USER_PASSWORD}
      - WORDPRESS_USER_EMAIL=${WORDPRESS_USER_EMAIL}
      - DOMAIN_NAME=${DOMAIN_NAME}
    expose:
      - 9000
    networks:
      - default
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "cgi-fcgi", "-connect", "localhost:9000", "/status"]
      start_period: 1m
      interval: 5s
      timeout: 2s
      retries: 21
    restart: always

  redis:
    image: inception:redis
    container_name: redis
    build:
      context: ./requirements/bonus/redis
      dockerfile: Dockerfile
    expose:
      - '6379'
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 1m
      interval: 5s
      timeout: 2s
      retries: 21
    networks:
      - default

  adminer:
    image: inception:adminer
    container_name: adminer
    build:
      context: ./requirements/bonus/adminer
      dockerfile: Dockerfile
    ports:
      - '7077'
    networks:
      - default
    depends_on:
      mariadb:
        condition: service_healthy
    restart: always

  grafana:
    image: inception:grafana
    container_name: grafana
    build:
      context: ./requirements/bonus/grafana
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    networks:
      - default
    depends_on:
      wordpress:
        condition: service_healthy
    restart: always

  prometheus:
    image: inception:prometheus
    container_name: prometheus
    build:
      context: ./requirements/bonus/prometheus
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    networks:
      - default
    restart: always

  ftp:
    image: inception:ftp
    container_name: ftp
    build:
      context: ./requirements/bonus/ftp
      dockerfile: Dockerfile
    environment:
      - FTP_USER=${FTP_USER}
      - FTP_PASSWORD=${FTP_PASSWORD}
    volumes:
      - $HOME/data/wordpress:/home/${FTP_USER}/wordpress
      - $HOME/data/portfolio:/home/${FTP_USER}/portfolio
      - $HOME/data/info:/home/${FTP_USER}/info
    depends_on:
      wordpress:
        condition: service_healthy
      portfolio:
        condition: service_started
      info:
        condition: service_started
    ports:
      - "21:21"
      - "21000-21010:21000-21010"
    networks:
      - default
    restart: always

  info:
    image: inception:info
    container_name: info
    build:
      context: ./requirements/bonus/info
      dockerfile: Dockerfile
    environment:
      - PROXY_URL=${PROXY_URL}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
      - INFO_PASSWORD=${INFO_PASSWORD}
    networks:
      - default
    volumes:
      - $HOME/data/info:/usr/src/app/info/:rw
    restart: always

  portfolio:
    image: inception:porfolio
    container_name: portfolio
    build:
      context: ./requirements/bonus/portfolio
      dockerfile: Dockerfile
    networks:
      - default
    volumes:
      - $HOME/data/portfolio:/var/www/portfolio:rw
    restart: always

networks:
    default:
      name: inception
      driver: bridge
